"""empty message

Revision ID: 22ffbfec7ef0
Revises: dbabce6d4246
Create Date: 2023-09-13 10:56:43.840080

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '22ffbfec7ef0'
down_revision = 'dbabce6d4246'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('holding_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['holding_id'], ['holdings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('holdings', schema=None) as batch_op:
        batch_op.alter_column('purchase_date',
               existing_type=sa.FLOAT(),
               type_=sa.Date(),
               existing_nullable=False)

    if environment == "production":
        op.execute(f"ALTER TABLE stocks SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('holdings', schema=None) as batch_op:
        batch_op.alter_column('purchase_date',
               existing_type=sa.Date(),
               type_=sa.FLOAT(),
               existing_nullable=False)

    op.drop_table('transactions')
    # ### end Alembic commands ###
